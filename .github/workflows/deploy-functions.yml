# .github/workflows/deploy-functions.yml
name: Deploy REST API to Cloud Functions

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 워크플로우 실행

env:
  PROJECT_ID: stockweather
  REGION: asia-northeast3
  FUNCTION_NAME: stockweather-rest-api # Cloud Functions 함수 이름 (원하는 이름으로 변경)
  GCP_SERVICE_ACCOUNT: stockweather-db-connect@stockweather.iam.gserviceaccount.com # 서비스 계정 확인
  
  # Cloud Functions용 환경 변수 (NestJS ConfigService에서 사용될 값들)
  # Cloud Functions는 Docker 이미지를 사용하지 않고 소스 코드를 배포하므로,
  # 환경 변수들을 --set-env-vars 플래그를 통해 직접 전달해야 합니다.
  MODE: 'REST'
  DB_HOST: 127.0.0.1
  DB_PORT: 5432
  # 비밀 값은 secrets에서 가져옵니다.
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_DATABASE: ${{ secrets.DB_DATABASE }}
  DB_SYNCHRONIZE: 'false' # 프로덕션에서는 false 권장
  DB_LOGGING: 'false'
  DB_SSL_ENABLED: 'true' # SSL 사용 여부
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  CHATGPT_API_KEY: ${{ secrets.CHATGPT_API_KEY }}
  DART_OPENAPI_KEY: ${{ secrets.DART_OPENAPI_KEY }}
  KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
  KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
  KAKAO_CALLBACK_URL: ${{ secrets.KAKAO_CALLBACK_URL }}
  FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
  CLOUD_SQL_CONNECTION_NAME: stockweather:asia-northeast3:stockweather # Cloud SQL 연결 이름

jobs:
  deploy-functions:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      # id-token: 'write' # Workload Identity Federation이 아닌 서비스 계정 키 사용 시 필요 없음
                             # 주석 처리 또는 삭제합니다.

    steps:
      - name: Checkout repository
        uses: 'actions/checkout@v4'

      # Google Cloud 인증 (서비스 계정 키 사용)
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          # Workload Identity Federation 대신 서비스 계정 키를 사용합니다.
          # 기존 'workload_identity_provider' 줄을 삭제하거나 주석 처리하고
          # 아래 'credentials_json' 줄을 추가합니다.
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          service_account: '${{ env.GCP_SERVICE_ACCOUNT }}' # 이 서비스 계정은 계속 사용됩니다.

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: 'Install dependencies'
        run: npm ci # 종속성 설치 (Cloud Functions가 빌드할 때 필요)

      - name: 'Build NestJS application'
        run: npm run build # NestJS 애플리케이션 빌드 (dist 폴더 생성)

      - name: 'Deploy to Cloud Functions'
        run: |
          gcloud functions deploy ${{ env.FUNCTION_NAME }} \
            --entry-point=app \
            --runtime=nodejs20 \
            --trigger-http \
            --allow-unauthenticated \
            --region=${{ env.REGION }} \
            --project=${{ env.PROJECT_ID }} \
            --service-account=${{ env.GCP_SERVICE_ACCOUNT }} \
            --memory=256MB \
            --timeout=300s \
            --add-cloudsql-instances=${{ env.CLOUD_SQL_CONNECTION_NAME }} \
            --set-env-vars \
              MODE=${{ env.MODE }}, \
              DB_HOST=${{ env.DB_HOST }}, \
              DB_PORT=${{ env.DB_PORT }}, \
              DB_USERNAME=${{ env.DB_USERNAME }}, \
              DB_PASSWORD=${{ env.DB_PASSWORD }}, \
              DB_DATABASE=${{ env.DB_DATABASE }}, \
              DB_SYNCHRONIZE=${{ env.DB_SYNCHRONIZE }}, \
              DB_LOGGING=${{ env.DB_LOGGING }}, \
              DB_SSL_ENABLED=${{ env.DB_SSL_ENABLED }}, \
              JWT_SECRET=${{ env.JWT_SECRET }}, \
              CHATGPT_API_KEY=${{ env.CHATGPT_API_KEY }}, \
              DART_OPENAPI_KEY=${{ env.DART_OPENAPI_KEY }}, \
              KAKAO_CLIENT_ID=${{ env.KAKAO_CLIENT_ID }}, \
              KAKAO_CLIENT_SECRET=${{ env.KAKAO_CLIENT_SECRET }}, \
              KAKAO_CALLBACK_URL=${{ env.KAKAO_CALLBACK_URL }}, \
              FRONTEND_URL=${{ env.FRONTEND_URL }}, \
              CLOUD_SQL_CONNECTION_NAME=${{ env.CLOUD_SQL_CONNECTION_NAME }}