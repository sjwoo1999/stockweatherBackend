name: Deploy StockWeather Backend to Cloud Run

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: asia-northeast3
  SERVICE_NAME: stockweather-backend
  ARTIFACT_REGISTRY_REPO: cloud-run-source-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          # gcloud CLI 버전을 명시적으로 최신으로 지정하여 호환성 문제 해결 시도 (필요시 주석 해제)
          # component-manager: true
          # install-components: 'cloud-build-local'

      - name: Configure Docker to use gcloud auth (for Artifact Registry)
        # ⭐ Artifact Registry 호스트를 명시적으로 지정하여 인증 설정
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Debug GCloud Authentication Status
        run: gcloud auth list

      - name: Build and Deploy to Cloud Run
        run: |
          IMAGE_NAME=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.SERVICE_NAME }}:latest
          
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

          # ⭐ --set-env-vars 뒤의 환경 변수들을 전체 큰따옴표로 묶어 하나의 문자열로 전달
          # ⭐ 모든 GitHub Secrets 변수와 배포 환경에 맞는 설정 (DB_SYNCHRONIZE, DB_LOGGING) 추가
          # ⭐ 각 줄의 끝에 '\'를 붙여 명령이 계속됨을 명시하고, --port 8080을 추가합니다.
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image $IMAGE_NAME \
            --platform managed \
            --region ${{ env.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars "DB_HOST=${{ secrets.DB_HOST }},\
              DB_PORT=${{ secrets.DB_PORT }},\
              DB_USERNAME=${{ secrets.DB_USERNAME }},\
              DB_DATABASE=${{ secrets.DB_DATABASE }},\
              DB_PASSWORD=${{ secrets.DB_PASSWORD }},\
              DB_SSL_ENABLED=${{ secrets.DB_SSL_ENABLED }},\
              NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }},\
              NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }},\
              KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }},\
              KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }},\
              KAKAO_CALLBACK_URL=${{ secrets.KAKAO_CALLBACK_URL }},\
              JWT_SECRET=${{ secrets.JWT_SECRET }},\
              GOOGLE_CSE_API_KEY=${{ secrets.GOOGLE_CSE_API_KEY }},\
              GOOGLE_CSE_ID=${{ secrets.GOOGLE_CSE_ID }},\
              CHATGPT_API_KEY=${{ secrets.CHATGPT_API_KEY }},\
              FRONTEND_URL=${{ secrets.FRONTEND_URL }},\
              DB_SYNCHRONIZE=false,\
              DB_LOGGING=false, \
              PORT=8000" \
            --timeout=600s \
            --port 8080
        working-directory: .