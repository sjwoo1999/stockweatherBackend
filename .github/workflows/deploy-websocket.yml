name: Deploy WebSocket to Cloud Run (CLI 버전)

on:
  push:
    branches:
      - main

jobs:
  deploy-websocket:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'

    steps:
      - name: Checkout repository
        uses: 'actions/checkout@v4'

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          service_account: '${{ secrets.GCP_SA_EMAIL }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 'Configure Docker to use the gcloud command'
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: 'Build Docker image for WebSocket'
        run: docker build -t ${{ secrets.GCP_AR_IMAGE_PATH_WEBSOCKET }}:${{ github.sha }} .

      - name: 'Push Docker image to Artifact Registry'
        run: docker push ${{ secrets.GCP_AR_IMAGE_PATH_WEBSOCKET }}:${{ github.sha }}

      - name: 'Deploy to Cloud Run (CLI 방식)'
        run: |
          gcloud run deploy ${{ secrets.GCP_CR_NAME_WEBSOCKET }} \
            --image=${{ secrets.GCP_AR_IMAGE_PATH_WEBSOCKET }}:${{ github.sha }} \
            --region=${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --timeout=300 \
            --service-account=${{ secrets.GCP_SA_EMAIL }} \
            --add-cloudsql-instances=${{ secrets.GCP_SQL_CONNECTION_NAME }} \
            --set-env-vars="ENTRY_FILE=main-ws,MODE=WS,DB_HOST=/cloudsql/${{ secrets.GCP_SQL_CONNECTION_NAME }},DB_PORT=5432,DB_SYNCHRONIZE=false,DB_LOGGING=false,DB_SSL_ENABLED=true,CLOUD_SQL_CONNECTION_NAME=${{ secrets.GCP_SQL_CONNECTION_NAME }}" \
            --set-secrets="\
                DB_USERNAME=projects/${{ secrets.GCP_PROJECT_ID }}/secrets/DB_USERNAME:latest,\
                DB_PASSWORD=projects/${{ secrets.GCP_PROJECT_ID }}/secrets/DB_PASSWORD:latest,\
                DB_DATABASE=projects/${{ secrets.GCP_PROJECT_ID }}/secrets/DB_DATABASE:latest,\
                JWT_SECRET=projects/${{ secrets.GCP_PROJECT_ID }}/secrets/JWT_SECRET:latest,\
                FRONTEND_URL=projects/${{ secrets.GCP_PROJECT_ID }}/secrets/FRONTEND_URL:latest" \
            --port=8080 \
            --min-instances=1 \
            --use-http2 \
            --quiet
