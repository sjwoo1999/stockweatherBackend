name: Deploy Backend to Cloud Run

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 워크플로우 실행

env:
  PROJECT_ID: stockweather # 본인의 Google Cloud 프로젝트 ID로 변경
  SERVICE_NAME: stockweather-backend # Cloud Run 서비스 이름 (이미지 이름으로도 사용)
  REGION: asia-northeast3 # Cloud Run 배포 리전
  # 수정: ARTIFACT_REGISTRY_FULL_IMAGE_PATH를 직접 정의하여 env 참조 문제를 우회합니다.
  # PROJECT_ID와 SERVICE_NAME (이미지 이름)을 여기에 직접 포함시킵니다.
  ARTIFACT_REGISTRY_FULL_IMAGE_PATH: asia-northeast3-docker.pkg.dev/stockweather/stockweather-backend/stockweather-backend
  GCP_SERVICE_ACCOUNT: stockweather-db-connect@stockweather.iam.gserviceaccount.com
  # === 여기를 수정합니다! ===
  # Cloud SQL 인스턴스 ID가 'stockweather'이므로, 연결 이름도 'stockweather'로 설정합니다.
  GCP_SQL_INSTANCE_CONNECTION_NAME: stockweather:asia-northeast3:stockweather # <--- 이 부분이 수정되었습니다.
  # =======================
  DB_HOST: 127.0.0.1
  DB_PORT: 5432
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_DATABASE: ${{ secrets.DB_DATABASE }}
  DB_SYNCHRONIZE: ${{ secrets.DB_SYNCHRONIZE }}
  DB_LOGGING: ${{ secrets.DB_LOGGING }}
  DB_SSL_ENABLED: ${{ secrets.DB_SSL_ENABLED }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  CHATGPT_API_KEY: ${{ secrets.CHATGPT_API_KEY }}
  DART_OPENAPI_KEY: ${{ secrets.DART_OPENAPI_KEY }}
  KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
  KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
  KAKAO_CALLBACK_URL: ${{ secrets.KAKAO_CALLBACK_URL }}
  FRONTEND_URL: ${{ secrets.FRONTEND_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'

    steps:
      - name: Checkout repository
        uses: 'actions/checkout@v4'

      # Google Cloud 인증 (서비스 계정 키 사용)
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Artifact Registry에 Docker 로그인
      - name: 'Set up Cloud SDK and Docker auth'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: 'Configure Docker to use the gcloud command'
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # Docker 이미지 빌드
      - name: 'Build Docker image'
        run: |
          docker build -t ${{ env.ARTIFACT_REGISTRY_FULL_IMAGE_PATH }}:${{ github.sha }} .

      # Docker 이미지 Artifact Registry에 푸시
      - name: 'Push Docker image to Artifact Registry'
        run: |
          docker push ${{ env.ARTIFACT_REGISTRY_FULL_IMAGE_PATH }}:${{ github.sha }}

      # Cloud Run에 배포
      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.ARTIFACT_REGISTRY_FULL_IMAGE_PATH }}:${{ github.sha }}
          flags: |
            --allow-unauthenticated
            --set-env-vars DB_HOST=${{ env.DB_HOST }}
            --set-env-vars DB_PORT=${{ env.DB_PORT }}
            --set-env-vars DB_USERNAME=${{ env.DB_USERNAME }}
            --set-env-vars DB_PASSWORD=${{ env.DB_PASSWORD }}
            --set-env-vars DB_DATABASE=${{ env.DB_DATABASE }}
            --set-env-vars DB_SYNCHRONIZE=${{ env.DB_SYNCHRONIZE }}
            --set-env-vars DB_LOGGING=${{ env.DB_LOGGING }}
            --set-env-vars DB_SSL_ENABLED=${{ env.DB_SSL_ENABLED }}
            --set-env-vars JWT_SECRET=${{ env.JWT_SECRET }}
            --set-env-vars CHATGPT_API_KEY=${{ env.CHATGPT_API_KEY }}
            --set-env-vars DART_OPENAPI_KEY=${{ env.DART_OPENAPI_KEY }}
            --set-env-vars KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
            --set-env-vars KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}
            --set-env-vars KAKAO_CALLBACK_URL=${{ secrets.KAKAO_CALLBACK_URL }}
            --set-env-vars FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            --add-cloudsql-instances ${{ env.GCP_SQL_INSTANCE_CONNECTION_NAME }}
            --timeout 300
            --service-account ${{ env.GCP_SERVICE_ACCOUNT }}