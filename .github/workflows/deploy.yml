name: Deploy Backend to Cloud Run

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 워크플로우 실행

env:
  PROJECT_ID: stockweather # 본인의 Google Cloud 프로젝트 ID로 변경
  SERVICE_NAME: stockweather-backend # Cloud Run 서비스 이름 (이미지 이름으로도 사용)
  REGION: asia-northeast3 # Cloud Run 배포 리전
  # 수정: ARTIFACT_REGISTRY_FULL_IMAGE_PATH를 직접 정의하여 env 참조 문제를 우회합니다.
  # PROJECT_ID와 SERVICE_NAME (이미지 이름)을 여기에 직접 포함시킵니다.
  ARTIFACT_REGISTRY_FULL_IMAGE_PATH: asia-northeast3-docker.pkg.dev/stockweather/stockweather-backend/stockweather-backend
  GCP_SERVICE_ACCOUNT: stockweather-db-connect@stockweather.iam.gserviceaccount.com
  # Cloud SQL 인스턴스 ID가 'stockweather'이므로, 연결 이름도 'stockweather'로 설정합니다.
  GCP_SQL_INSTANCE_CONNECTION_NAME: stockweather:asia-northeast3:stockweather # <--- 이 부분이 수정되었습니다.
  DB_HOST: 127.0.0.1
  DB_PORT: 5432
  # 비밀 값은 secrets.DB_USERNAME 과 같이 ${{ secrets.SECRET_NAME }} 형식으로 사용됩니다.
  # env 섹션에서 직접 사용하는 것은 권장되지 않지만,
  # deploy-cloudrun 액션의 --set-env-vars 플래그에서 사용할 때는 이 형식으로 전달해야 합니다.
  # 여기서는 deploy 스텝에서 직접 secrets를 참조하도록 하겠습니다.

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      # Cloud Run 배포를 위한 id-token 권한 추가 (Workload Identity Federation 사용 시)
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: 'actions/checkout@v4'

      # Google Cloud 인증 (서비스 계정 키 또는 Workload Identity Federation 사용)
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          # 워크로드 아이덴티티 연동 사용 시
          workload_identity_provider: 'projects/${{ env.PROJECT_ID }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: '${{ env.GCP_SERVICE_ACCOUNT }}'
          # 서비스 계정 키 파일 사용 시 (위에 workload_identity_provider 대신 사용)
          # credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Artifact Registry에 Docker 로그인 및 Cloud SDK 설정
      - name: 'Set up Cloud SDK and Docker auth'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: 'Configure Docker to use the gcloud command'
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # Docker 이미지 빌드
      - name: 'Build Docker image'
        run: |
          docker build -t ${{ env.ARTIFACT_REGISTRY_FULL_IMAGE_PATH }}:${{ github.sha }} .

      # Docker 이미지 Artifact Registry에 푸시
      - name: 'Push Docker image to Artifact Registry'
        run: |
          docker push ${{ env.ARTIFACT_REGISTRY_FULL_IMAGE_PATH }}:${{ github.sha }}

      # Cloud Run에 배포
      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.ARTIFACT_REGISTRY_FULL_IMAGE_PATH }}:${{ github.sha }}
          # flags 인자 내에서 모든 설정을 --set-env-vars 로 전달합니다.
          # CLOUD_SQL_CONNECTION_NAME을 여기에 추가합니다.
          flags: |
            --allow-unauthenticated
            --timeout 300
            --service-account ${{ env.GCP_SERVICE_ACCOUNT }}
            --add-cloudsql-instances ${{ env.GCP_SQL_INSTANCE_CONNECTION_NAME }}
            --set-env-vars DB_HOST=${{ env.DB_HOST }}
            --set-env-vars DB_PORT=${{ env.DB_PORT }}
            --set-env-vars DB_USERNAME=${{ secrets.DB_USERNAME }}
            --set-env-vars DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            --set-env-vars DB_DATABASE=${{ secrets.DB_DATABASE }}
            --set-env-vars DB_SYNCHRONIZE=${{ secrets.DB_SYNCHRONIZE }}
            --set-env-vars DB_LOGGING=${{ secrets.DB_LOGGING }}
            --set-env-vars DB_SSL_ENABLED=${{ secrets.DB_SSL_ENABLED }}
            --set-env-vars JWT_SECRET=${{ secrets.JWT_SECRET }}
            --set-env-vars CHATGPT_API_KEY=${{ secrets.CHATGPT_API_KEY }}
            --set-env-vars DART_OPENAPI_KEY=${{ secrets.DART_OPENAPI_KEY }}
            --set-env-vars KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
            --set-env-vars KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}
            --set-env-vars KAKAO_CALLBACK_URL=${{ secrets.KAKAO_CALLBACK_URL }}
            --set-env-vars FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            --set-env-vars CLOUD_SQL_CONNECTION_NAME=${{ env.GCP_SQL_INSTANCE_CONNECTION_NAME }} # ⭐ 추가된 부분
          # env_vars_update_strategy와 secrets_update_strategy는
          # with 아래에 바로 있으면 작동하지 않고, gcloud run deploy의 플래그로 전달해야 합니다.
          # 하지만 google-github-actions/deploy-cloudrun@v2 액션은
          # 해당 인자를 직접 제공하므로, 위 flags 안에 넣지 않습니다.
          env_vars_update_strategy: merge # 기존 환경 변수와 병합
          secrets_update_strategy: merge # 기존 Secret 환경 변수와 병합
          # skip_default_labels: true # 기본 라벨 스킵 (선택 사항)
          # no_traffic: true # 새 리비전으로 트래픽 즉시 전환 방지 (선택 사항)