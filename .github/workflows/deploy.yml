# .github/workflows/deploy.yml
name: Deploy Backend to Cloud Run

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때마다 워크플로우 실행
    paths:
      - 'backend/**' # backend 폴더 안의 파일 변경 시 트리거

env:
  GCP_PROJECT_ID: stockweather 
  GCP_REGION: asia-northeast3 
  ARTIFACT_REGISTRY_REPO: cloud-run-source-deploy 
  SERVICE_NAME: stockweather-backend # ⭐ Cloud Run 서비스 이름이 'stockweather-backend'가 맞는지 Cloud Run 콘솔에서 최종 확인하세요!
  GCP_SQL_INSTANCE_CONNECTION_NAME: stockweather:asia-northeast3:stockweather-cloud-sql # ⭐⭐ 이 값을 실제 Cloud SQL 인스턴스 연결 이름으로 변경해야 합니다! (중요) ⭐⭐

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' 

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20' 

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'projects/${{ env.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
        # ⭐⭐⭐ '@@'를 '@' 하나로 수정! (가장 유력한 인증 실패 원인) ⭐⭐⭐
        service_account: 'stockweather-db-connect@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com'

    - name: Docker Login to Artifact Registry
      run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

    - name: Build and Deploy to Cloud Run
      run: |
        IMAGE_NAME=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.SERVICE_NAME }}:latest
        
        # ⭐⭐⭐ working-directory를 사용했으므로 빌드 컨텍스트를 '.'으로 변경 (이전 수정) ⭐⭐⭐
        docker build -t $IMAGE_NAME . 
        docker push $IMAGE_NAME

        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image $IMAGE_NAME \
          --platform managed \
          --region ${{ env.GCP_REGION }} \
          --allow-unauthenticated \
          --add-cloudsql-instances ${{ env.GCP_SQL_INSTANCE_CONNECTION_NAME }} \
          # ⭐⭐⭐ 환경 변수 구문 수정 (각 변수별 --set-env-vars) ⭐⭐⭐
          --set-env-vars DB_HOST=127.0.0.1 \
          --set-env-vars DB_PORT=5432 \
          --set-env-vars DB_USERNAME=${{ secrets.DB_USERNAME }} \
          --set-env-vars DB_DATABASE=${{ secrets.DB_DATABASE }} \
          --set-env-vars DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          --set-env-vars DB_SSL_ENABLED=false \
          --set-env-vars KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} \
          --set-env-vars KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }} \
          --set-env-vars KAKAO_CALLBACK_URL=${{ secrets.KAKAO_CALLBACK_URL }} \
          --set-env-vars JWT_SECRET=${{ secrets.JWT_SECRET }} \
          --set-env-vars CHATGPT_API_KEY=${{ secrets.CHATGPT_API_KEY }} \
          --set-env-vars FRONTEND_URL=${{ secrets.FRONTEND_URL }} \
          --set-env-vars DB_SYNCHRONIZE=false \
          --set-env-vars DB_LOGGING=false \
          --set-env-vars DART_OPENAPI_KEY=${{ secrets.DART_OPENAPI_KEY }} \
          --timeout=600s \
          --port 8080 
      working-directory: ./backend